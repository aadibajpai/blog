#!/usr/bin/env bash

[[ "$1" == "" ]] && ./internal/list && exit 0

source internal/globals.sh

set_editor

NUM_FOUND_FILES=$(search_posts "$@" | wc --lines)

if (( "${NUM_FOUND_FILES}" < "1" ))
then
	echo "Could not find posts matching: $@"
	exit 0
elif [[ "${NUM_FOUND_FILES}" == "1" ]]
then
	FILE="$(search_posts "$@")"
elif [[ "${MULTI_MATCH_STRAT}" == "simple" ]]
then
	echo "Ambiguous search term: $@"
	while read FILE
	do
		pretty_print_post_info "${FILE}"
	done < <(search_posts "$@")
	exit 0
elif [[ "${MULTI_MATCH_STRAT}" == "newest" ]]
then
	FILE="$(search_posts "$@" | tail -n 1)"
else
	FILE="$(search_posts "$@" | head -n 1)"
fi

[[ "${FILE}" == "" ]] && exit 0

TEMP="$(mktemp)"
cp "${FILE}" "${TEMP}"
OLD_MOD_DATE="$(get_mod_date "${TEMP}")"
"${ED}" "${TEMP}"
read -p "bs prompt to make program pause"
OLD_HASH="$(cat "${FILE}" | hash_data)"
NEW_HASH="$(cat "${TEMP}" | hash_data)"
if [[ "${OLD_HASH}" != "${NEW_HASH}" ]]
then
	NEW_TITLE="$(get_title "${TEMP}" | to_lower | strip_punctuation | strip_space)"
	NEW_ID="$(get_id "${TEMP}")"
	NEW_FILE="$(dirname "${FILE}")/${NEW_TITLE}${TITLE_SEPARATOR_CHAR}${NEW_ID}.${POST_EXTENSION}"
	if [[ "${FILE}" != "${NEW_FILE}" ]]
	then
		echo "Warning: ${FILE} moving to ${NEW_FILE}"
		rm "${FILE}"
		FILE="${NEW_FILE}"
		TITLE_CHANGED="foobar"
	fi
	sed -i "2,2{s/^${OLD_MOD_DATE}$/$(date +'%s')/;}" "${TEMP}"
	cp "${TEMP}" "${FILE}"
	if [[ "${REBUILD_POLICY}" != "manual" ]]
	then
		[[ "${TITLE_CHANGED}" == "" ]] && ./bm build all || ./bm build rebuild
	else
		echo "You must now run the following command to update the build"
		echo "./bm build all"
	fi
fi
rm "${TEMP}"
