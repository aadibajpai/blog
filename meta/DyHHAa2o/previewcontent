My CTF team Pwnzorz recently won [castorsCTF20](https://castorsctf20.ctfd.io/) ðŸ¥³ 

Here are the writeups for the challenges I did for verification. I've tried to go into detail where possible but feel free to hit me up for a clarification if you don't understand what I did or the thought process, which, in my opinion, is the most important part of solving a challenge.

Let's get started.

{toc}

## Cryptography

### Goose Chase

We're given two pictures from a screenshot of the Untitled Goose Game, with one of them having a distorted horizontal bar of pixels presumably containing the flag and the other having some weird RGB stuff going on:

![goose_stole_the_key.png](https://i.imgur.com/hRiwU4V.png)  
![chal.png](https://i.imgur.com/G96FFLG.png)

Since they're the same picture, immediately my mind jumps to the thought that the diff of both the images might show us the distorted part properly. Checking the diff using literally the first website that came up, my suspicions were confirmed. 

![flag image diff](https://i.imgur.com/vPshBkJ.png)

> castorsCTF{m355_w1th_7h3_h0nk_y0u_g3t_7h3_b0nk}

### Warmup

We're provided a few numbers, and an image.

> a=p+q
>
> b=p-q
>
> c=41027546415588921135190519817388916847442693284567375482282571314638757544938653824671437300971782426302443281077457253827782026089649732942648771306702020
>
> A=1780602199528179468577178612383888301611753776788787799581979768613992169436352468580888042155360498830144442282937213247708372597613226926855391934953064
>
> e=0x10001
>
> enc=825531027337680366509171870396193970230179478931882005355846498785843598000659828635030935743236266080589740863128695174980645084614454653557872620514117

![triangle with numbers](https://raw.githubusercontent.com/cyber-castors/ctf20challenges/master/challenges/crypto/rsa/chal.png)

Classic RSA with a twist, seems simple enough! But even after getting the values of `p` and `q`, I wasn't getting anywhere, so I DMed the challenge creator. A crosscheck later, it turned out that the value of `c` posted in the challenge was actually `c^2`, factoring that into the equation, we got the correct values. 

The equations I used were derived from the Pythagoras theorem and area of the triangle formula:

`p = sqrt(c^2/4 + A)` 

`q = sqrt(p^2-2A)`

giving us:

```python
p = 109715490261974447198586988864224528805526352370318545032102915309331780233413
q = 92066738860291183962222763550286379517247445014524023523696633123203716884771
```

Then, it's a simple matter of plugging the values in [RsaCtfTool](https://github.com/Ganapati/RsaCtfTool), and it spits out the flag.

> castorsCTF{n0th1ng_l1k3_pr1m3_numb3r5_t0_w4rm_up_7h3_3ng1n3s}

### Magic School Bus

> nc [chals20.cybercastors.com](http://chals20.cybercastors.com/) 14421
